# This config sets up a simple, single-node cluster that's equipped to use TLS.
# See examples/tls for the associated cluster configs and certs.
#
# To verify that TLS is working properly, try something like:
#
# openssl s_client -debug -connect localhost:9093 -CAfile ca.crt \
#   -cert server.crt -key server.key
version: '2'

services:
  zookeeper:
    image: "wurstmeister/zookeeper:latest"
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.4.1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_BROKER_RACK: zone1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,SSL://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092,SSL://127.0.0.1:9093
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_SSL_KEYSTORE_LOCATION: '/certs/kafka.keystore.jks'
      KAFKA_SSL_KEYSTORE_PASSWORD: 'test123'
      KAFKA_SSL_KEY_PASSWORD: 'test123'
      KAFKA_SSL_TRUSTSTORE_LOCATION: '/certs/kafka.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 'test123'
      KAFKA_SSL_CLIENT_AUTH: 'none'
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: 'SSL'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./examples/auth/certs:/certs
